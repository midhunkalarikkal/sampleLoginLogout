<!DOCTYPE html>
<html>

<head>
    <title>CRUD App</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel='stylesheet' href='/static/stylesheets/home.css' />
    <link rel="icon" type="image/x-icon" href="/static/images/nodejs.png">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"
        integrity="sha512-Avb2QiuDEEvB4bZJYdft2mNjVShBftLdPG8FJ0V7irTLQ8Uo0qcPxh4Plq7G5tGm0rU+1SPhVotteLpBERwTkw=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="https://cdn.datatables.net/v/bs4/dt-1.13.8/datatables.min.css" rel="stylesheet">
</head>


<body class="relative">


    <nav class="navbar navbar-expand-lg bg-dark navbar-dark py-3">
        <div class="container">
            <a class="navbar-brand">Hi Welcom <%= name %></a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navmenu">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navmenu">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a href="#learn" class="nav-link">What You'll Learn</a>
                    </li>
                    <li class="nav-item">
                        <a href="#questions" class="nav-link">Questions</a>
                    </li>
                    <li class="nav-item">
                        <a href="/logout" class="nav-link">Logout</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <section class="bg-dark text-light p-5 text-center text-sm-start p-lg-0 pt-lg-5">
        <div class="container">
            <div class="d-sm-flex align-items-center justify-content-between">
                <div class="pt-5">
                    <h1>Become a <span class="custom-text-color">MERN Stack Developer</span></h1>
                    <p class="lead">
                        "Coding is the art of turning coffee into code, fueled by passion and powered by logic."
                    </p>
                    <button class="btn btn-primary btn-lg my-4" data-bs-toggle="modal" data-bs-target="#add">Add
                        new person</button>
                </div>
                <img src="/static/images/showcase.svg" class="img-fluid w-50 d-none d-sm-block" alt="">
            </div>
        </div>
    </section>

    <section class="p-5">
        <div class="container">
            <div class="row text-center g-4">
                <% cards.forEach(function(card) { %>
                    <div class="col-md">
                        <div class="card bg-dark text-light">
                            <div class="card-body text-center">
                                <div class="h1 mb-3">
                                    <i class="bi bi-laptop"></i>
                                </div>
                                <div class="h3 card-title mb-3">
                                    <%= card.cardHeader %>
                                </div>
                                <p class="card-text">
                                    <%= card.cardContent %>
                                </p>
                                <a href="" class="btn btn-primary">
                                    <%= card.cardFooter %>
                                </a>
                            </div>
                        </div>
                    </div>
                    <% }); %>
            </div>
        </div>
    </section>

    <section class="p-5" id="learn">
        <div class="container">
            <div class="row align-items-center justify-items-between">
                <div class="col-md">
                    <img src="static/images/fundamentals.svg" alt="" class="img-fluid">
                </div>
                <div class="col-md p-5">
                    <h1>List</h1>
                    <% langs.forEach(function(lang) { %>
                        <ul class="list-group">
                            <li class="list-group-item">
                                <%= lang%>
                            </li>
                        </ul>
                        <% }); %>
                </div>
            </div>
        </div>
    </section>


    <div class="container">
        <div class="table-responsive ">
            <% if(userList !="" ){ %>
                <table class="table table-stripped text-center my-4">
                    <thead>
                        <tr class="table-dark">
                            <th class="text-center">ID</th>
                            <th class="text-center">Image</th>
                            <th class="text-center">Name</th>
                            <th class="text-center">Email</th>
                            <th class="text-center">Phone</th>
                            <th class="text-center">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% userList.forEach((row,index)=> { %>
                            <tr class="align-middle">
                                <td>
                                    <%= index %>
                                </td>
                                <td><img src=" <%= row.image %> " width="50" class="img-thumbnal" />
                                </td>
                                <td>
                                    <%= row.name %>
                                </td>
                                <td>
                                    <%= row.email %>
                                </td>
                                <td>
                                    <%= row.phone %>
                                </td>
                                <td>
                                    <a href="#" class="text-success" onclick="editUser('<%= row._id %>')">
                                        <i class="fas fa-edit fa-lg mx-1"></i>
                                    </a>
                                    <a href="#" class="text-danger" onclick="deleteUser('<%= row._id %>')">
                                        <i class="fas fa-trash fa-lg mx-1"></i>
                                    </a>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            <% } %>
        </div>
    </div>

    <footer class="p-3 bg-dark text-center text-white position-relative">
        <div class="container">
            <p><a href="https://github.com/midhunkalarikkal" style="text-decoration: none; color: white">Developed by
                    midhun kalarikkal</a></p>
            <a href="#" class="position-absolute bottom-0 end-0 p-3">
                <i class="bi bi-arrow-up-circle h1"></i>
            </a>
        </div>
    </footer>

    <!-- Modal for adding new user -->
    <div class="modal fade" id="add" tabindex="-1" aria-labelledby="enrollLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="enrollLabel">Add a user</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="add-form" enctype="multipart/form-data">
                        <div class="mb-3">
                            <label for="name">Name</label>
                            <input type="text" id="name" name="name" class="form-control form-control-lg"
                                placeholder="Enter name" required>
                            <small id="name-error" class="text-danger"></small>
                        </div>
                        <div class="mb-3">
                            <label for="email">Email</label>
                            <input type="email" id="email" name="email" class="form-control form-control-lg"
                                placeholder="Enter email" required>
                            <small id="email-error" class="text-danger"></small>
                        </div>
                        <div class="mb-3">
                            <label for="phone">Phone</label>
                            <input type="tel" id="phone" name="phone" class="form-control form-control-lg"
                                placeholder="Enter phone" required>
                            <small id="phone-error" class="text-danger"></small>
                        </div>
                        <div class="mb-3">
                            <label for="image" class="form-label">Select image</label>
                            <input type="file" id="image" name="image" class="form-control form-control-lg" required>
                        </div>
                        <div class="mb-3 d-grid">
                            <button type="button" id="submitBtn" class="btn btn-success btn-lg">Add User</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal for Edit User -->
    <div class="modal" tabindex="-1" id="editUserModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editUserForm" enctype="multipart/form-data">
                        <div class="mb-3">
                            <label for="name">Name</label>
                            <input type="text" name="name" id="editname" class="form-control form-control-lg"
                                placeholder="Enter name" required>
                        </div>
                        <div class="mb-3">
                            <label for="email">Email</label>
                            <input type="email" name="email" id="editemail" class="form-control form-control-lg"
                                placeholder="Enter email" required>
                        </div>
                        <div class="mb-3">
                            <label for="phone">Phone</label>
                            <input type="tel" name="phone" id="editphone" class="form-control form-control-lg"
                                placeholder="Enter phone" required>
                        </div>
                        <input type="hidden" name="userId" id="edituserid">
                        <input type="hidden" name="userId" id="edituserid">
                        <div class="mb-3">
                            <label for="image" class="form-label">Select image</label>
                            <input type="file" name="image" id="image" class="form-control form-control-lg">
                            <img src="" id="userImage" class="img-thumbnail mt-1" width="100" style="display:none;">
                        </div>
                        <input type="hidden" name="old_image" id="old_image">
                        <div class="mb-3 d-grid">
                            <input type="submit" value="Update User" class="btn btn-success btn-lg">
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
        crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"
        integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdn.datatables.net/v/bs4/dt-1.13.8/datatables.min.js"></script>
    <script>

        ////// form validation \\\\\\
        function validateForm() {
            let isValid = true;

            const name = document.getElementById("name").value.trim();
            const email = document.getElementById("email").value.trim();
            const phone = document.getElementById("phone").value.trim();

            if (!/^[a-zA-Z\s]+$/.test(name)) {
                document.getElementById("name-error").textContent = "Invalid name. Use only letters and spaces.";
                isValid = false;
            } else {
                document.getElementById("name-error").textContent = "";
            }

            if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
                document.getElementById("email-error").textContent = "Invalid email format.";
                isValid = false;
            } else {
                document.getElementById("email-error").textContent = "";
            }

            if (!/^\d{10}$/.test(phone)) {
                document.getElementById("phone-error").textContent = "Invalid phone number. Must be 10 digits.";
                isValid = false;
            } else {
                document.getElementById("phone-error").textContent = "";
            }

            return isValid;
        }

        ////// Adding a new user \\\\\\
        document.getElementById("submitBtn").addEventListener("click", async function () {
            if (!validateForm()) {
                Swal.fire({
                    icon: "error",
                    title: "Validation Error",
                    text: "Please correct the errors before submitting.",
                });
                return;
            }

            const form = document.getElementById("add-form");
            const formData = new FormData(form);

            try {
                const response = await fetch("/add", {
                    method: "POST",
                    body: formData,
                });

                const result = await response.json();

                Swal.fire({
                    icon: result.type,
                    title: result.message,
                }).then(() => {
                    if (result.type === "success") {
                        form.reset();
                        setTimeout(() => {
                            location.reload();
                        }, 1000);
                    }
                })

            } catch (error) {
                Swal.fire({
                    icon: "error",
                    title: "Server Error",
                    text: "Something went wrong. Please try again.",
                });
            }
        });


        ////// Deleting a user \\\\\\
        async function deleteUser(userId) {
            const confirmed = await Swal.fire({
                title: 'Are you sure?',
                text: 'This action cannot be undone.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'No, keep it',
            });

            if (confirmed.isConfirmed) {
                try {
                    const response = await fetch(`/delete/${userId}`, {
                        method: "GET",
                    });

                    const result = await response.json();

                    Swal.fire({
                        icon: result.type,
                        title: result.message,
                    }).then(() => {
                        if (result.type === "success") {
                            setTimeout(() => {
                                location.reload();
                            }, 1000);
                        }
                    })

                } catch (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Server Error',
                        text: 'Something went wrong. Please try again.',
                    });
                }
            }
        }

        ////// Fetching the edit user details \\\\\\
        async function editUser(userId) {
            try {
                const response = await fetch(`/edit/${userId}`);
                const user = await response.json();

                if (user && user._id) {
                    document.getElementById("editname").value = user.name;
                    document.getElementById("editemail").value = user.email;
                    document.getElementById("editphone").value = user.phone;
                    document.getElementById("old_image").value = user.image;
                    document.getElementById("edituserid").value = user._id;
                    document.getElementById("userImage").src = `/${user.image}`;
                    document.getElementById("userImage").style.display = 'block';

                    $('#editUserModal').modal('show');
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed to fetch user data.',
                });
            }
        }

        ////// user data updating \\\\\\
        document.getElementById("editUserForm").addEventListener("submit", async function (e) {
            e.preventDefault();

            if (!validateForm()) {
                Swal.fire({
                    icon: "error",
                    title: "Validation Error",
                    text: "Please correct the errors before submitting.",
                });
                return;
            }
            const formData = new FormData(this);
            const userId = document.getElementById("edituserid").value;
            console.log("userid : ", userId);

            try {
                const response = await fetch(`/update/${userId}`, {
                    method: "POST",
                    body: formData,
                });

                const result = await response.json();
                Swal.fire({
                    icon: result.type,
                    title: result.message,
                }).then(() => {
                    if (result.type === "success") {
                        setTimeout(() => {
                            location.reload();
                        }, 1000);
                    }
                })

            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed to update user data.',
                });
            }
        });

        $(document).ready(function () {
            $("table").DataTable({
                order: [0, 'desc']
            })
        })

    </script>

</body>
</html>