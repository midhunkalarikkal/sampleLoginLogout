<!doctype html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>CRUD App</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" type="image/x-icon" href="/static/images/nodejs.png">
    <link rel='stylesheet' href='/static/stylesheets/style.css' type="text/css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
</head>

<body>

    <div class="wrapper">
        <div class="container main">
            <div class="row">
                <div class="col-md-6 side-image">
                    <div class="text">
                        <p>Join the community of developers <i>MERN Stack</i></p>
                    </div>
                </div>
                <div class="col-md-6 right">
                    <div class="input-box">
                        <header class="form-head">Sign Up</header>
                        <form id="signup-form">
                            <div class="input-field">
                                <input type="text" class="input" id="name" name="name" required>
                                <label for="email">Name</label>
                            </div>
                            <div class="input-field">
                                <input type="email" class="input" id="email" name="email" required>
                                <label for="email">Email</label>
                            </div>
                            <div class="input-field">
                                <input type="password" class="input" id="pass" name="password" required>
                                <label for="pass">Password</label>
                            </div>
                            <div class="input-field">
                                <button type="submit" class="submit">Sign Up</button>
                            </div>
                        </form>
                        <div class="text-center">
                            <p class="small-link mt-4">Already an user ? <strong><a href="/">Sign In</a></strong></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        
        //////  User signup \\\\\\
        const form = document.getElementById("signup-form");
        document.getElementById("signup-form").addEventListener("submit", async (e) => {
            e.preventDefault();

            const name = document.getElementById("name").value;
            const email = document.getElementById("email").value;
            const password = document.getElementById("pass").value;

            const nameRegex = /^[A-Za-z]{1,20}$/;
            const emailRegex = /^[^\s@]+@gmail\.com$/;
            const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[A-Za-z\d@$!%*?&]{8,20}$/;

            if (!email || !password || !name) {
                Swal.fire({
                    icon: "warning",
                    title: "Missing Information",
                    text: "Please fill out all fields!",
                });
                return;
            }

            if (!nameRegex.test(name)) {
                Swal.fire({
                    icon: "warning",
                    title: "Invalid Name",
                    text: "Name must contain only alphabets and be at most 20 characters long.",
                });
                return;
            }

            if (!emailRegex.test(email)) {
                Swal.fire({
                    icon: "warning",
                    title: "Invalid Email",
                    text: "Please enter a valid email address.",
                });
                return;
            }

            if (!passwordRegex.test(password)) {
                Swal.fire({
                    icon: "warning",
                    title: "Weak Password",
                    text: "Password must be at least 8 characters long, contain one uppercase letter, one lowercase letter, one number, and be at most 20 characters long.",
                });
                return;
            }

            try {
                const response = await fetch("/signup", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ name, email, password }),
                });

                const data = await response.json();

                if (data.success) {
                    Swal.fire({
                        icon: "success",
                        title: "Signup Successful",
                        text: data.message,
                        timer: 2000,
                        showConfirmButton: false,
                        allowOutsideClick: false,
                    }).then(() => {
                        window.location.href = data.redirectUrl;
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Signup Failed",
                        text: data.message,
                    });
                }
            } catch (err) {
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: "An error occurred, please try again later",
                });
            }
        });
    </script>
</body>

</html>